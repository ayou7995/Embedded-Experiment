{
  "_args": [
    [
      {
        "raw": "tessel-mjpeg-consumer@^1.1.0",
        "scope": null,
        "escapedName": "tessel-mjpeg-consumer",
        "name": "tessel-mjpeg-consumer",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "/home/frankwang/Embedded-Experiment/Tessel/hw2/node_modules/tessel-av"
    ]
  ],
  "_from": "tessel-mjpeg-consumer@>=1.1.0 <2.0.0",
  "_id": "tessel-mjpeg-consumer@1.1.0",
  "_inCache": true,
  "_location": "/tessel-mjpeg-consumer",
  "_nodeVersion": "4.6.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/tessel-mjpeg-consumer-1.1.0.tgz_1477078010110_0.21565003972500563"
  },
  "_npmUser": {
    "name": "rwaldron",
    "email": "waldron.rick@gmail.com"
  },
  "_npmVersion": "2.15.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "tessel-mjpeg-consumer@^1.1.0",
    "scope": null,
    "escapedName": "tessel-mjpeg-consumer",
    "name": "tessel-mjpeg-consumer",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/tessel-av"
  ],
  "_resolved": "https://registry.npmjs.org/tessel-mjpeg-consumer/-/tessel-mjpeg-consumer-1.1.0.tgz",
  "_shasum": "ff6753622f736addd1d57cfba42cc55b7e7b0398",
  "_shrinkwrap": null,
  "_spec": "tessel-mjpeg-consumer@^1.1.0",
  "_where": "/home/frankwang/Embedded-Experiment/Tessel/hw2/node_modules/tessel-av",
  "author": {
    "name": "Mike Maelzer",
    "email": "mmaelzer@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/mmaelzer/mjpeg-consumer/issues"
  },
  "dependencies": {},
  "description": "Fork of mjpeg-consumer.",
  "devDependencies": {
    "file-on-write": "~0.2.0",
    "nodeunit": "^0.9.1",
    "request": "^2.67.0"
  },
  "directories": {},
  "dist": {
    "shasum": "ff6753622f736addd1d57cfba42cc55b7e7b0398",
    "tarball": "https://registry.npmjs.org/tessel-mjpeg-consumer/-/tessel-mjpeg-consumer-1.1.0.tgz"
  },
  "gitHead": "5a8f8b9fbb1456f03bb5aea219169291a03ec34b",
  "homepage": "https://github.com/mmaelzer/mjpeg-consumer#readme",
  "keywords": [
    "mjpg",
    "mjpeg",
    "motion jpeg",
    "stream",
    "http",
    "ip camera"
  ],
  "license": "MIT",
  "main": "./lib/mjpeg-consumer.js",
  "maintainers": [
    {
      "name": "rwaldron",
      "email": "waldron.rick@gmail.com"
    }
  ],
  "name": "tessel-mjpeg-consumer",
  "optionalDependencies": {},
  "readme": "# tessel-mjpeg-consumer\n\n\n---------------\n\n**This is a fork**\n\n- Defines `MjpegConsumer` as a class\n- Eliminates the `buffertools` dependency. That dependency existed only to provide a `concat` method, which is provided by the runtime as `Buffer.concat(...)`\n- Eliminates `oldBufferType` mode\n- Eliminates invocation without `new`\n\n---------------\n\n  \nA node.js transform stream implementation that consumes http multipart mjpeg streams and emits jpegs.\n\n[![build status](https://secure.travis-ci.org/mmaelzer/mjpeg-consumer.png)](http://travis-ci.org/mmaelzer/mjpeg-consumer)\n[![Coverage Status](https://coveralls.io/repos/mmaelzer/mjpeg-consumer/badge.svg?branch=master&service=github)](https://coveralls.io/github/mmaelzer/mjpeg-consumer?branch=master)\n\n  \n### Install\n\n```bash\nnpm install mjpeg-consumer\n```\n  \n----------------------  \n### Usage\nThe `mjpeg-consumer` isn't very useful without a writable pipe to pipe jpegs to. I've built the [file-on-write](https://github.com/mmaelzer/file-on-write) stream to write a file every time `write` is called on it. The below example opens a stream to an IP camera, pipes the results to the `mjpeg-consumer` which processes the stream and emits parsed jpegs to the `file-on-write` writer.\n\n```javascript\nvar request = require(\"request\");\nvar MjpegConsumer = require(\"mjpeg-consumer\");\nvar FileOnWrite = require(\"file-on-write\");\n\nvar writer = new FileOnWrite({ \n\tpath: './video',\n\text: '.jpg'\n});\nvar consumer = new MjpegConsumer();\n\nrequest(\"http://mjpeg.sanford.io/count.mjpeg\").pipe(consumer).pipe(writer);\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mmaelzer/mjpeg-consumer.git"
  },
  "scripts": {
    "test": "nodeunit test/test.js"
  },
  "version": "1.1.0"
}
